export declare const w4: {
    _id: string;
    machineName: string;
    modified: string;
    title: string;
    display: string;
    settings: {
        pdf: {
            id: string;
            src: string;
        };
    };
    name: string;
    path: string;
    project: string;
    created: string;
    components: ({
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        type: string;
        overlay: {
            width: number;
            height: number;
            left: number;
            top: number;
            page: number;
            style: string;
        };
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
            displayInTimezone?: undefined;
            submissionTimezone?: undefined;
            locale?: undefined;
            useLocaleSettings?: undefined;
            allowInput?: undefined;
            mode?: undefined;
            enableTime?: undefined;
            noCalendar?: undefined;
            format?: undefined;
            hourIncrement?: undefined;
            minuteIncrement?: undefined;
            time_24hr?: undefined;
            minDate?: undefined;
            maxDate?: undefined;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength: string;
            maxLength: string;
            pattern: string;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        mask: boolean;
        inputType: string;
        inputFormat: string;
        inputMask: string;
        displayMask: string;
        spellcheck: boolean;
        truncateMultipleSpaces: boolean;
        id: string;
        datePicker?: undefined;
        format?: undefined;
        useLocaleSettings?: undefined;
        allowInput?: undefined;
        enableDate?: undefined;
        enableTime?: undefined;
        defaultDate?: undefined;
        displayInTimezone?: undefined;
        timezone?: undefined;
        datepickerMode?: undefined;
        timePicker?: undefined;
        customOptions?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        value?: undefined;
        name?: undefined;
        datagridLabel?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        datePicker: {
            datepickerMode: string;
            showWeeks: boolean;
            startingDay: number;
            initDate: string;
            minMode: string;
            maxMode: string;
            yearRows: number;
            yearColumns: number;
            minDate: null;
            maxDate: null;
        };
        type: string;
        overlay: {
            width: number;
            height: number;
            left: number;
            top: number;
            page: number;
            style: string;
        };
        widget: {
            type: string;
            displayInTimezone: string;
            submissionTimezone: string;
            locale: string;
            useLocaleSettings: boolean;
            allowInput: boolean;
            mode: string;
            enableTime: boolean;
            noCalendar: boolean;
            format: string;
            hourIncrement: number;
            minuteIncrement: number;
            time_24hr: boolean;
            minDate: null;
            maxDate: null;
        };
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: string;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        format: string;
        useLocaleSettings: boolean;
        allowInput: boolean;
        enableDate: boolean;
        enableTime: boolean;
        defaultDate: string;
        displayInTimezone: string;
        timezone: string;
        datepickerMode: string;
        timePicker: {
            hourStep: number;
            minuteStep: number;
            showMeridian: boolean;
            readonlyInput: boolean;
            mousewheel: boolean;
            arrowkeys: boolean;
        };
        customOptions: {};
        id: string;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        value?: undefined;
        name?: undefined;
        datagridLabel?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        type: string;
        overlay: {
            width: number;
            height: number;
            left: number;
            top: number;
            page: number;
            style: string;
        };
        hideLabel: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
            displayInTimezone?: undefined;
            submissionTimezone?: undefined;
            locale?: undefined;
            useLocaleSettings?: undefined;
            allowInput?: undefined;
            mode?: undefined;
            enableTime?: undefined;
            noCalendar?: undefined;
            format?: undefined;
            hourIncrement?: undefined;
            minuteIncrement?: undefined;
            time_24hr?: undefined;
            minDate?: undefined;
            maxDate?: undefined;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        footer: string;
        width: string;
        height: string;
        penColor: string;
        backgroundColor: string;
        minWidth: string;
        maxWidth: string;
        keepOverlayRatio: boolean;
        id: string;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        datePicker?: undefined;
        format?: undefined;
        useLocaleSettings?: undefined;
        allowInput?: undefined;
        enableDate?: undefined;
        enableTime?: undefined;
        defaultDate?: undefined;
        displayInTimezone?: undefined;
        timezone?: undefined;
        datepickerMode?: undefined;
        timePicker?: undefined;
        customOptions?: undefined;
        value?: undefined;
        name?: undefined;
        datagridLabel?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        hideLabel: boolean;
        overlay: {
            page: number;
            top: number;
            left: number;
            height: number;
            width: number;
            style: string;
        };
        type: string;
        value: string;
        name: string;
        defaultValue: boolean;
        key: string;
        datagridLabel: boolean;
        label: string;
        tableView: boolean;
        inputType: string;
        input: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: null;
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        id: string;
        mask?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        datePicker?: undefined;
        format?: undefined;
        useLocaleSettings?: undefined;
        allowInput?: undefined;
        enableDate?: undefined;
        enableTime?: undefined;
        defaultDate?: undefined;
        displayInTimezone?: undefined;
        timezone?: undefined;
        datepickerMode?: undefined;
        timePicker?: undefined;
        customOptions?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        overlay: {
            page: number;
            top: number;
            left: number;
            height: string;
            width: string;
            style: string;
        };
        type: string;
        key: string;
        label: string;
        tableView: boolean;
        input: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
            displayInTimezone?: undefined;
            submissionTimezone?: undefined;
            locale?: undefined;
            useLocaleSettings?: undefined;
            allowInput?: undefined;
            mode?: undefined;
            enableTime?: undefined;
            noCalendar?: undefined;
            format?: undefined;
            hourIncrement?: undefined;
            minuteIncrement?: undefined;
            time_24hr?: undefined;
            minDate?: undefined;
            maxDate?: undefined;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength: string;
            maxLength: string;
            pattern: string;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        mask: boolean;
        inputType: string;
        inputFormat: string;
        inputMask: string;
        displayMask: string;
        spellcheck: boolean;
        truncateMultipleSpaces: boolean;
        id: string;
        datePicker?: undefined;
        format?: undefined;
        useLocaleSettings?: undefined;
        allowInput?: undefined;
        enableDate?: undefined;
        enableTime?: undefined;
        defaultDate?: undefined;
        displayInTimezone?: undefined;
        timezone?: undefined;
        datepickerMode?: undefined;
        timePicker?: undefined;
        customOptions?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        value?: undefined;
        name?: undefined;
        datagridLabel?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        input: boolean;
        label: string;
        tableView: boolean;
        key: string;
        type: string;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
            displayInTimezone?: undefined;
            submissionTimezone?: undefined;
            locale?: undefined;
            useLocaleSettings?: undefined;
            allowInput?: undefined;
            mode?: undefined;
            enableTime?: undefined;
            noCalendar?: undefined;
            format?: undefined;
            hourIncrement?: undefined;
            minuteIncrement?: undefined;
            time_24hr?: undefined;
            minDate?: undefined;
            maxDate?: undefined;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
            page?: undefined;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        size: string;
        leftIcon: string;
        rightIcon: string;
        block: boolean;
        action: string;
        disableOnInvalid: boolean;
        theme: string;
        id: string;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        datePicker?: undefined;
        format?: undefined;
        useLocaleSettings?: undefined;
        allowInput?: undefined;
        enableDate?: undefined;
        enableTime?: undefined;
        defaultDate?: undefined;
        displayInTimezone?: undefined;
        timezone?: undefined;
        datepickerMode?: undefined;
        timePicker?: undefined;
        customOptions?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        value?: undefined;
        name?: undefined;
        datagridLabel?: undefined;
    })[];
    owner: string;
    submissionAccess: {
        roles: never[];
        type: string;
    }[];
    access: {
        roles: string[];
        type: string;
    }[];
    tags: never[];
    type: string;
    _vid: number;
    revisions: string;
};
export declare const example: {
    _id: string;
    machineName: string;
    modified: string;
    title: string;
    display: string;
    type: string;
    name: string;
    path: string;
    project: string;
    created: string;
    components: ({
        input: boolean;
        html: string;
        type: string;
        conditional: {
            show: string;
            when: null;
            eq: string;
        };
        key: string;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        tableView: boolean;
        modalEdit: boolean;
        label: string;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: null;
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        id: string;
        addons: never[];
        columns?: undefined;
        tree?: undefined;
        autoAdjust?: undefined;
        lazyLoad?: undefined;
        tags?: undefined;
        questions?: undefined;
        values?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        input: boolean;
        columns: ({
            components: ({
                tabindex: string;
                tags: never[];
                clearOnHide: boolean;
                hidden: boolean;
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                customClass: string;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: {
                    type: string;
                };
                attributes: {};
                validateOn: string;
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                mask: boolean;
                inputFormat: string;
                spellcheck: boolean;
                id: string;
                addons: never[];
                displayMask: string;
                truncateMultipleSpaces: boolean;
                kickbox?: undefined;
            } | {
                tabindex: string;
                tags: never[];
                clearOnHide: boolean;
                hidden: boolean;
                input: boolean;
                tableView: boolean;
                inputType: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                type: string;
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                kickbox: {
                    enabled: boolean;
                };
                customClass: string;
                multiple: boolean;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: {
                    type: string;
                };
                attributes: {};
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                };
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                mask: boolean;
                inputFormat: string;
                inputMask: string;
                spellcheck: boolean;
                id: string;
                addons: never[];
                displayMask: string;
                truncateMultipleSpaces: boolean;
            })[];
            width: number;
            offset: number;
            push: number;
            pull: number;
            size: string;
            currentWidth: number;
        } | {
            components: ({
                tabindex: string;
                tags: never[];
                clearOnHide: boolean;
                hidden: boolean;
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                customClass: string;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: {
                    type: string;
                };
                attributes: {};
                validateOn: string;
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                mask: boolean;
                inputFormat: string;
                spellcheck: boolean;
                id: string;
                addons: never[];
                displayMask: string;
                truncateMultipleSpaces: boolean;
                inputMode?: undefined;
            } | {
                tabindex: string;
                tags: never[];
                clearOnHide: boolean;
                hidden: boolean;
                input: boolean;
                tableView: boolean;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                defaultValue: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                };
                type: string;
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                customClass: string;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: {
                    type: string;
                };
                attributes: {};
                validateOn: string;
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                mask: boolean;
                inputType: string;
                inputFormat: string;
                spellcheck: boolean;
                inputMode: string;
                id: string;
                addons: never[];
                displayMask: string;
                truncateMultipleSpaces: boolean;
            })[];
            width: number;
            offset: number;
            push: number;
            pull: number;
            size: string;
            currentWidth: number;
        })[];
        type: string;
        conditional: {
            show: string;
            when: null;
            eq: string;
        };
        key: string;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        tableView: boolean;
        modalEdit: boolean;
        label: string;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: null;
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        tree: boolean;
        autoAdjust: boolean;
        id: string;
        addons: never[];
        lazyLoad: boolean;
        html?: undefined;
        tags?: undefined;
        questions?: undefined;
        values?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        tabindex: string;
        tags: never[];
        clearOnHide: boolean;
        hidden: boolean;
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        questions: {
            value: string;
            label: string;
        }[];
        values: {
            value: string;
            label: string;
        }[];
        defaultValue: string;
        protected: boolean;
        persistent: boolean;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        type: string;
        conditional: {
            show: string;
            when: null;
            eq: string;
        };
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        unique: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: null;
        attributes: {};
        validateOn: string;
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        id: string;
        addons: never[];
        html?: undefined;
        columns?: undefined;
        tree?: undefined;
        autoAdjust?: undefined;
        lazyLoad?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        tags: never[];
        clearOnHide: boolean;
        hidden: boolean;
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        placeholder: string;
        footer: string;
        width: string;
        height: string;
        penColor: string;
        backgroundColor: string;
        minWidth: string;
        maxWidth: string;
        protected: boolean;
        persistent: boolean;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        type: string;
        hideLabel: boolean;
        conditional: {
            show: string;
            when: null;
            eq: string;
        };
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        unique: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
        };
        attributes: {};
        validateOn: string;
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        id: string;
        addons: never[];
        keepOverlayRatio: boolean;
        html?: undefined;
        columns?: undefined;
        tree?: undefined;
        autoAdjust?: undefined;
        lazyLoad?: undefined;
        questions?: undefined;
        values?: undefined;
        size?: undefined;
        leftIcon?: undefined;
        rightIcon?: undefined;
        block?: undefined;
        action?: undefined;
        disableOnInvalid?: undefined;
        theme?: undefined;
    } | {
        tabindex: string;
        conditional: {
            eq: string;
            when: null;
            show: string;
        };
        tags: never[];
        input: boolean;
        label: string;
        tableView: boolean;
        key: string;
        size: string;
        leftIcon: string;
        rightIcon: string;
        block: boolean;
        action: string;
        disableOnInvalid: boolean;
        theme: string;
        type: string;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        id: string;
        addons: never[];
        html?: undefined;
        columns?: undefined;
        tree?: undefined;
        autoAdjust?: undefined;
        lazyLoad?: undefined;
        questions?: undefined;
        values?: undefined;
        footer?: undefined;
        width?: undefined;
        height?: undefined;
        penColor?: undefined;
        backgroundColor?: undefined;
        minWidth?: undefined;
        maxWidth?: undefined;
        keepOverlayRatio?: undefined;
    })[];
    owner: string;
    submissionAccess: {
        roles: string[];
        type: string;
    }[];
    access: {
        roles: string[];
        type: string;
    }[];
    tags: never[];
    _vid: number;
    revisions: string;
};
export declare const simpleForm: {
    _id: string;
    title: string;
    name: string;
    path: string;
    type: string;
    display: string;
    tags: never[];
    components: ({
        label: string;
        applyMaskOn: string;
        tableView: boolean;
        validate: {
            required: boolean;
            maxWords?: undefined;
            minWords?: undefined;
            custom?: undefined;
            customPrivate?: undefined;
            strictDateValidation?: undefined;
            multiple?: undefined;
            unique?: undefined;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        key: string;
        type: string;
        input: boolean;
        autoExpand?: undefined;
        placeholder?: undefined;
        prefix?: undefined;
        customClass?: undefined;
        suffix?: undefined;
        multiple?: undefined;
        defaultValue?: undefined;
        protected?: undefined;
        unique?: undefined;
        persistent?: undefined;
        hidden?: undefined;
        clearOnHide?: undefined;
        refreshOn?: undefined;
        redrawOn?: undefined;
        modalEdit?: undefined;
        dataGridLabel?: undefined;
        labelPosition?: undefined;
        description?: undefined;
        errorLabel?: undefined;
        tooltip?: undefined;
        hideLabel?: undefined;
        tabindex?: undefined;
        disabled?: undefined;
        autofocus?: undefined;
        dbIndex?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        calculateServer?: undefined;
        widget?: undefined;
        attributes?: undefined;
        validateOn?: undefined;
        conditional?: undefined;
        overlay?: undefined;
        allowCalculateOverride?: undefined;
        encrypted?: undefined;
        showCharCount?: undefined;
        showWordCount?: undefined;
        properties?: undefined;
        allowMultipleMasks?: undefined;
        addons?: undefined;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        inputMode?: undefined;
        id?: undefined;
        keyModified?: undefined;
        disableOnInvalid?: undefined;
    } | {
        label: string;
        applyMaskOn: string;
        autoExpand: boolean;
        tableView: boolean;
        validate: {
            maxWords: number;
            required?: undefined;
            minWords?: undefined;
            custom?: undefined;
            customPrivate?: undefined;
            strictDateValidation?: undefined;
            multiple?: undefined;
            unique?: undefined;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        key: string;
        type: string;
        input: boolean;
        placeholder?: undefined;
        prefix?: undefined;
        customClass?: undefined;
        suffix?: undefined;
        multiple?: undefined;
        defaultValue?: undefined;
        protected?: undefined;
        unique?: undefined;
        persistent?: undefined;
        hidden?: undefined;
        clearOnHide?: undefined;
        refreshOn?: undefined;
        redrawOn?: undefined;
        modalEdit?: undefined;
        dataGridLabel?: undefined;
        labelPosition?: undefined;
        description?: undefined;
        errorLabel?: undefined;
        tooltip?: undefined;
        hideLabel?: undefined;
        tabindex?: undefined;
        disabled?: undefined;
        autofocus?: undefined;
        dbIndex?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        calculateServer?: undefined;
        widget?: undefined;
        attributes?: undefined;
        validateOn?: undefined;
        conditional?: undefined;
        overlay?: undefined;
        allowCalculateOverride?: undefined;
        encrypted?: undefined;
        showCharCount?: undefined;
        showWordCount?: undefined;
        properties?: undefined;
        allowMultipleMasks?: undefined;
        addons?: undefined;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        inputMode?: undefined;
        id?: undefined;
        keyModified?: undefined;
        disableOnInvalid?: undefined;
    } | {
        label: string;
        applyMaskOn: string;
        autoExpand: boolean;
        tableView: boolean;
        validate: {
            minWords: number;
            required?: undefined;
            maxWords?: undefined;
            custom?: undefined;
            customPrivate?: undefined;
            strictDateValidation?: undefined;
            multiple?: undefined;
            unique?: undefined;
            minLength?: undefined;
            maxLength?: undefined;
            pattern?: undefined;
        };
        key: string;
        type: string;
        input: boolean;
        placeholder?: undefined;
        prefix?: undefined;
        customClass?: undefined;
        suffix?: undefined;
        multiple?: undefined;
        defaultValue?: undefined;
        protected?: undefined;
        unique?: undefined;
        persistent?: undefined;
        hidden?: undefined;
        clearOnHide?: undefined;
        refreshOn?: undefined;
        redrawOn?: undefined;
        modalEdit?: undefined;
        dataGridLabel?: undefined;
        labelPosition?: undefined;
        description?: undefined;
        errorLabel?: undefined;
        tooltip?: undefined;
        hideLabel?: undefined;
        tabindex?: undefined;
        disabled?: undefined;
        autofocus?: undefined;
        dbIndex?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        calculateServer?: undefined;
        widget?: undefined;
        attributes?: undefined;
        validateOn?: undefined;
        conditional?: undefined;
        overlay?: undefined;
        allowCalculateOverride?: undefined;
        encrypted?: undefined;
        showCharCount?: undefined;
        showWordCount?: undefined;
        properties?: undefined;
        allowMultipleMasks?: undefined;
        addons?: undefined;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        inputMode?: undefined;
        id?: undefined;
        keyModified?: undefined;
        disableOnInvalid?: undefined;
    } | {
        label: string;
        applyMaskOn: string;
        tableView: boolean;
        key: string;
        type: string;
        input: boolean;
        validate?: undefined;
        autoExpand?: undefined;
        placeholder?: undefined;
        prefix?: undefined;
        customClass?: undefined;
        suffix?: undefined;
        multiple?: undefined;
        defaultValue?: undefined;
        protected?: undefined;
        unique?: undefined;
        persistent?: undefined;
        hidden?: undefined;
        clearOnHide?: undefined;
        refreshOn?: undefined;
        redrawOn?: undefined;
        modalEdit?: undefined;
        dataGridLabel?: undefined;
        labelPosition?: undefined;
        description?: undefined;
        errorLabel?: undefined;
        tooltip?: undefined;
        hideLabel?: undefined;
        tabindex?: undefined;
        disabled?: undefined;
        autofocus?: undefined;
        dbIndex?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        calculateServer?: undefined;
        widget?: undefined;
        attributes?: undefined;
        validateOn?: undefined;
        conditional?: undefined;
        overlay?: undefined;
        allowCalculateOverride?: undefined;
        encrypted?: undefined;
        showCharCount?: undefined;
        showWordCount?: undefined;
        properties?: undefined;
        allowMultipleMasks?: undefined;
        addons?: undefined;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        inputMode?: undefined;
        id?: undefined;
        keyModified?: undefined;
        disableOnInvalid?: undefined;
    } | {
        label: string;
        applyMaskOn: string;
        tableView: boolean;
        key: string;
        type: string;
        input: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
            minLength: string;
            maxLength: string;
            pattern: string;
            maxWords?: undefined;
            minWords?: undefined;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        mask: boolean;
        inputType: string;
        inputFormat: string;
        inputMask: string;
        displayMask: string;
        spellcheck: boolean;
        truncateMultipleSpaces: boolean;
        inputMode: string;
        id: string;
        keyModified: boolean;
        autoExpand?: undefined;
        disableOnInvalid?: undefined;
    } | {
        type: string;
        label: string;
        key: string;
        disableOnInvalid: boolean;
        input: boolean;
        tableView: boolean;
        applyMaskOn?: undefined;
        validate?: undefined;
        autoExpand?: undefined;
        placeholder?: undefined;
        prefix?: undefined;
        customClass?: undefined;
        suffix?: undefined;
        multiple?: undefined;
        defaultValue?: undefined;
        protected?: undefined;
        unique?: undefined;
        persistent?: undefined;
        hidden?: undefined;
        clearOnHide?: undefined;
        refreshOn?: undefined;
        redrawOn?: undefined;
        modalEdit?: undefined;
        dataGridLabel?: undefined;
        labelPosition?: undefined;
        description?: undefined;
        errorLabel?: undefined;
        tooltip?: undefined;
        hideLabel?: undefined;
        tabindex?: undefined;
        disabled?: undefined;
        autofocus?: undefined;
        dbIndex?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        calculateServer?: undefined;
        widget?: undefined;
        attributes?: undefined;
        validateOn?: undefined;
        conditional?: undefined;
        overlay?: undefined;
        allowCalculateOverride?: undefined;
        encrypted?: undefined;
        showCharCount?: undefined;
        showWordCount?: undefined;
        properties?: undefined;
        allowMultipleMasks?: undefined;
        addons?: undefined;
        mask?: undefined;
        inputType?: undefined;
        inputFormat?: undefined;
        inputMask?: undefined;
        displayMask?: undefined;
        spellcheck?: undefined;
        truncateMultipleSpaces?: undefined;
        inputMode?: undefined;
        id?: undefined;
        keyModified?: undefined;
    })[];
    settings: {};
    properties: {};
    project: string;
    controller: string;
    revisions: string;
    submissionRevisions: string;
    _vid: number;
    created: string;
    modified: string;
    machineName: string;
};
export declare const wizard: {
    _id: string;
    machineName: string;
    modified: string;
    title: string;
    display: string;
    type: string;
    name: string;
    path: string;
    project: string;
    created: string;
    components: ({
        key: string;
        input: boolean;
        components: ({
            type: string;
            multiple: boolean;
            key: string;
            label: string;
            tableView: boolean;
            input: boolean;
            validate?: undefined;
            defaultValue?: undefined;
            inputType?: undefined;
        } | {
            type: string;
            validate: {
                required: boolean;
            };
            defaultValue: number;
            key: string;
            label: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
            multiple?: undefined;
        })[];
        title: string;
        type: string;
        tableView: boolean;
        label: string;
        disableOnInvalid?: undefined;
    } | {
        tableView: boolean;
        key: string;
        input: boolean;
        components: ({
            type: string;
            validate: {
                required: boolean;
            };
            key: string;
            label: string;
            tableView: boolean;
            input: boolean;
            placeholder?: undefined;
            data?: undefined;
            dataSrc?: undefined;
            valueProperty?: undefined;
            template?: undefined;
            widget?: undefined;
            searchField?: undefined;
            clearOnHide?: undefined;
            components?: undefined;
            legend?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            placeholder: string;
            data: {
                url: string;
                headers: {
                    value: string;
                    key: string;
                }[];
            };
            dataSrc: string;
            valueProperty: string;
            template: string;
            type: string;
            widget: string;
            searchField: string;
            validate?: undefined;
            clearOnHide?: undefined;
            components?: undefined;
            legend?: undefined;
        } | {
            clearOnHide: boolean;
            type: string;
            components: {
                type: string;
                key: string;
                label: string;
                tableView: boolean;
                input: boolean;
            }[];
            legend: string;
            tableView: boolean;
            input: boolean;
            key: string;
            label: string;
            validate?: undefined;
            placeholder?: undefined;
            data?: undefined;
            dataSrc?: undefined;
            valueProperty?: undefined;
            template?: undefined;
            widget?: undefined;
            searchField?: undefined;
        })[];
        title: string;
        type: string;
        label: string;
        disableOnInvalid?: undefined;
    } | {
        type: string;
        components: ({
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            validate: {
                required: boolean;
            };
            type: string;
            components?: undefined;
            data?: undefined;
            widget?: undefined;
        } | {
            type: string;
            key: string;
            label: string;
            tableView: boolean;
            components: {
                hideLabel: boolean;
                type: string;
                key: string;
                label: string;
                tableView: boolean;
                input: boolean;
                inDataGrid: boolean;
            }[];
            input: boolean;
            validate?: undefined;
            data?: undefined;
            widget?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            data: {
                values: {
                    value: string;
                    label: string;
                }[];
            };
            widget: string;
            type: string;
            validate?: undefined;
            components?: undefined;
        })[];
        tableView: boolean;
        title: string;
        input: boolean;
        key: string;
        label: string;
        disableOnInvalid?: undefined;
    } | {
        key: string;
        input: boolean;
        components: ({
            type: string;
            key: string;
            label: string;
            tableView: boolean;
            input: boolean;
            dataGridLabel?: undefined;
            defaultValue?: undefined;
            hideLabel?: undefined;
            lockKey?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            dataGridLabel: boolean;
            key: string;
            defaultValue: boolean;
            type: string;
            hideLabel?: undefined;
            lockKey?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            type: string;
            hideLabel: boolean;
            lockKey: boolean;
            dataGridLabel?: undefined;
            defaultValue?: undefined;
        })[];
        title: string;
        type: string;
        tableView: boolean;
        label: string;
        disableOnInvalid?: undefined;
    } | {
        type: string;
        disableOnInvalid: boolean;
        key: string;
        tableView: boolean;
        label: string;
        input: boolean;
        components?: undefined;
        title?: undefined;
    })[];
    owner: string;
    submissionAccess: {
        roles: string[];
        type: string;
    }[];
    access: {
        roles: string[];
        type: string;
    }[];
    tags: string[];
    settings: {
        controller: string;
    };
    revisions: string;
    _vid: number;
    controller: string;
    properties: {};
};
export declare const inlineEmbedFormPortal: {
    _id: string;
    type: string;
    tags: never[];
    owner: string;
    components: ({
        label: string;
        tag: string;
        attrs: {
            attr: string;
            value: string;
        }[];
        content: string;
        refreshOnChange: boolean;
        key: string;
        type: string;
        input: boolean;
        tableView: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: null;
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        id: string;
        action?: undefined;
        showValidations?: undefined;
        theme?: undefined;
        block?: undefined;
        leftIcon?: undefined;
        custom?: undefined;
        hideOnChildrenHidden?: undefined;
        size?: undefined;
        rightIcon?: undefined;
        disableOnInvalid?: undefined;
        title?: undefined;
        collapsible?: undefined;
        components?: undefined;
        tree?: undefined;
        lazyLoad?: undefined;
        breadcrumb?: undefined;
    } | {
        label: string;
        action: string;
        showValidations: boolean;
        theme: string;
        block: boolean;
        leftIcon: string;
        tableView: boolean;
        key: string;
        type: string;
        custom: string;
        input: boolean;
        hideOnChildrenHidden: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: {
            type: string;
        };
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        size: string;
        rightIcon: string;
        disableOnInvalid: boolean;
        id: string;
        tag?: undefined;
        attrs?: undefined;
        content?: undefined;
        refreshOnChange?: undefined;
        title?: undefined;
        collapsible?: undefined;
        components?: undefined;
        tree?: undefined;
        lazyLoad?: undefined;
        breadcrumb?: undefined;
    } | {
        title: string;
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            customDefaultValue: string;
            key: string;
            type: string;
            tableView: boolean;
            input: boolean;
            mask: boolean;
            inputType: string;
            inputFormat: string;
            spellcheck: boolean;
            hideOnChildrenHidden: boolean;
            placeholder: string;
            prefix: string;
            customClass: string;
            suffix: string;
            multiple: boolean;
            defaultValue: null;
            protected: boolean;
            unique: boolean;
            persistent: boolean;
            hidden: boolean;
            clearOnHide: boolean;
            refreshOn: string;
            redrawOn: string;
            modalEdit: boolean;
            dataGridLabel: boolean;
            labelPosition: string;
            description: string;
            errorLabel: string;
            tooltip: string;
            hideLabel: boolean;
            tabindex: string;
            disabled: boolean;
            autofocus: boolean;
            dbIndex: boolean;
            calculateValue: string;
            calculateServer: boolean;
            widget: {
                type: string;
            };
            attributes: {};
            validateOn: string;
            validate: {
                required: boolean;
                custom: string;
                customPrivate: boolean;
                strictDateValidation: boolean;
                multiple: boolean;
                unique: boolean;
                onlyAvailableItems?: undefined;
            };
            conditional: {
                show: null;
                when: null;
                eq: string;
            };
            overlay: {
                style: string;
                left: string;
                top: string;
                width: string;
                height: string;
            };
            allowCalculateOverride: boolean;
            encrypted: boolean;
            showCharCount: boolean;
            showWordCount: boolean;
            properties: {};
            allowMultipleMasks: boolean;
            addons: never[];
            id: string;
            data?: undefined;
            idPath?: undefined;
            clearOnRefresh?: undefined;
            limit?: undefined;
            dataSrc?: undefined;
            valueProperty?: undefined;
            lazyLoad?: undefined;
            filter?: undefined;
            searchEnabled?: undefined;
            searchDebounce?: undefined;
            searchField?: undefined;
            minSearch?: undefined;
            readOnlyValue?: undefined;
            authenticate?: undefined;
            ignoreCache?: undefined;
            template?: undefined;
            selectFields?: undefined;
            selectThreshold?: undefined;
            uniqueOptions?: undefined;
            fuseOptions?: undefined;
            indexeddb?: undefined;
            customOptions?: undefined;
            useExactSearch?: undefined;
            title?: undefined;
            collapsible?: undefined;
            components?: undefined;
            collapsed?: undefined;
            tree?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
        } | {
            label: string;
            customDefaultValue: string;
            key: string;
            type: string;
            input: boolean;
            tableView: boolean;
            placeholder: string;
            prefix: string;
            customClass: string;
            suffix: string;
            multiple: boolean;
            defaultValue: null;
            protected: boolean;
            unique: boolean;
            persistent: boolean;
            hidden: boolean;
            clearOnHide: boolean;
            refreshOn: string;
            redrawOn: string;
            modalEdit: boolean;
            dataGridLabel: boolean;
            labelPosition: string;
            description: string;
            errorLabel: string;
            tooltip: string;
            hideLabel: boolean;
            tabindex: string;
            disabled: boolean;
            autofocus: boolean;
            dbIndex: boolean;
            calculateValue: string;
            calculateServer: boolean;
            widget: {
                type: string;
            };
            attributes: {};
            validateOn: string;
            validate: {
                required: boolean;
                custom: string;
                customPrivate: boolean;
                strictDateValidation: boolean;
                multiple: boolean;
                unique: boolean;
                onlyAvailableItems?: undefined;
            };
            conditional: {
                show: null;
                when: null;
                eq: string;
            };
            overlay: {
                style: string;
                left: string;
                top: string;
                width: string;
                height: string;
            };
            allowCalculateOverride: boolean;
            encrypted: boolean;
            showCharCount: boolean;
            showWordCount: boolean;
            properties: {};
            allowMultipleMasks: boolean;
            addons: never[];
            inputType: string;
            id: string;
            mask?: undefined;
            inputFormat?: undefined;
            spellcheck?: undefined;
            hideOnChildrenHidden?: undefined;
            data?: undefined;
            idPath?: undefined;
            clearOnRefresh?: undefined;
            limit?: undefined;
            dataSrc?: undefined;
            valueProperty?: undefined;
            lazyLoad?: undefined;
            filter?: undefined;
            searchEnabled?: undefined;
            searchDebounce?: undefined;
            searchField?: undefined;
            minSearch?: undefined;
            readOnlyValue?: undefined;
            authenticate?: undefined;
            ignoreCache?: undefined;
            template?: undefined;
            selectFields?: undefined;
            selectThreshold?: undefined;
            uniqueOptions?: undefined;
            fuseOptions?: undefined;
            indexeddb?: undefined;
            customOptions?: undefined;
            useExactSearch?: undefined;
            title?: undefined;
            collapsible?: undefined;
            components?: undefined;
            collapsed?: undefined;
            tree?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
        } | {
            label: string;
            widget: string;
            tableView: boolean;
            data: {
                values: {
                    label: string;
                    value: string;
                }[];
                json: string;
                url: string;
                resource: string;
                custom: string;
            };
            key: string;
            type: string;
            input: boolean;
            hideOnChildrenHidden: boolean;
            placeholder: string;
            prefix: string;
            customClass: string;
            suffix: string;
            multiple: boolean;
            defaultValue: null;
            protected: boolean;
            unique: boolean;
            persistent: boolean;
            hidden: boolean;
            clearOnHide: boolean;
            refreshOn: string;
            redrawOn: string;
            modalEdit: boolean;
            dataGridLabel: boolean;
            labelPosition: string;
            description: string;
            errorLabel: string;
            tooltip: string;
            hideLabel: boolean;
            tabindex: string;
            disabled: boolean;
            autofocus: boolean;
            dbIndex: boolean;
            customDefaultValue: string;
            calculateValue: string;
            calculateServer: boolean;
            attributes: {};
            validateOn: string;
            validate: {
                required: boolean;
                custom: string;
                customPrivate: boolean;
                strictDateValidation: boolean;
                multiple: boolean;
                unique: boolean;
                onlyAvailableItems: boolean;
            };
            conditional: {
                show: null;
                when: null;
                eq: string;
            };
            overlay: {
                style: string;
                left: string;
                top: string;
                width: string;
                height: string;
            };
            allowCalculateOverride: boolean;
            encrypted: boolean;
            showCharCount: boolean;
            showWordCount: boolean;
            properties: {};
            allowMultipleMasks: boolean;
            addons: never[];
            idPath: string;
            clearOnRefresh: boolean;
            limit: number;
            dataSrc: string;
            valueProperty: string;
            lazyLoad: boolean;
            filter: string;
            searchEnabled: boolean;
            searchDebounce: number;
            searchField: string;
            minSearch: number;
            readOnlyValue: boolean;
            authenticate: boolean;
            ignoreCache: boolean;
            template: string;
            selectFields: string;
            selectThreshold: number;
            uniqueOptions: boolean;
            fuseOptions: {
                include: string;
                threshold: number;
            };
            indexeddb: {
                filter: {};
            };
            customOptions: {};
            useExactSearch: boolean;
            id: string;
            mask?: undefined;
            inputType?: undefined;
            inputFormat?: undefined;
            spellcheck?: undefined;
            title?: undefined;
            collapsible?: undefined;
            components?: undefined;
            collapsed?: undefined;
            tree?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
        } | {
            title: string;
            collapsible: boolean;
            key: string;
            type: string;
            label: string;
            input: boolean;
            tableView: boolean;
            components: ({
                label: string;
                tooltip: string;
                tableView: boolean;
                key: string;
                type: string;
                input: boolean;
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                defaultValue: null;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: {
                    type: string;
                };
                attributes: {};
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    minWords?: undefined;
                    maxWords?: undefined;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                addons: never[];
                mask: boolean;
                inputType: string;
                inputFormat: string;
                inputMask: string;
                displayMask: string;
                spellcheck: boolean;
                truncateMultipleSpaces: boolean;
                id: string;
                calculateValueMode?: undefined;
                value?: undefined;
                name?: undefined;
                editor?: undefined;
                autoExpand?: undefined;
                as?: undefined;
                rows?: undefined;
                wysiwyg?: undefined;
                fixedSize?: undefined;
            } | {
                label: string;
                tooltip: string;
                tableView: boolean;
                defaultValue: boolean;
                calculateValue: string;
                key: string;
                type: string;
                input: boolean;
                calculateValueMode: string;
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateServer: boolean;
                widget: null;
                attributes: {};
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                    minLength?: undefined;
                    maxLength?: undefined;
                    pattern?: undefined;
                    minWords?: undefined;
                    maxWords?: undefined;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                addons: never[];
                inputType: string;
                value: string;
                name: string;
                id: string;
                mask?: undefined;
                inputFormat?: undefined;
                inputMask?: undefined;
                displayMask?: undefined;
                spellcheck?: undefined;
                truncateMultipleSpaces?: undefined;
                editor?: undefined;
                autoExpand?: undefined;
                as?: undefined;
                rows?: undefined;
                wysiwyg?: undefined;
                fixedSize?: undefined;
            } | {
                label: string;
                tooltip: string;
                tableView: boolean;
                defaultValue: boolean;
                key: string;
                type: string;
                input: boolean;
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                description: string;
                errorLabel: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: null;
                attributes: {};
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                    minLength?: undefined;
                    maxLength?: undefined;
                    pattern?: undefined;
                    minWords?: undefined;
                    maxWords?: undefined;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                addons: never[];
                inputType: string;
                value: string;
                name: string;
                id: string;
                mask?: undefined;
                inputFormat?: undefined;
                inputMask?: undefined;
                displayMask?: undefined;
                spellcheck?: undefined;
                truncateMultipleSpaces?: undefined;
                calculateValueMode?: undefined;
                editor?: undefined;
                autoExpand?: undefined;
                as?: undefined;
                rows?: undefined;
                wysiwyg?: undefined;
                fixedSize?: undefined;
            } | {
                label: string;
                description: string;
                tooltip: string;
                editor: string;
                autoExpand: boolean;
                tableView: boolean;
                key: string;
                type: string;
                as: string;
                input: boolean;
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                defaultValue: null;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                refreshOn: string;
                redrawOn: string;
                modalEdit: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                errorLabel: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                calculateServer: boolean;
                widget: {
                    type: string;
                };
                attributes: {};
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                    strictDateValidation: boolean;
                    multiple: boolean;
                    unique: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    minWords: string;
                    maxWords: string;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                overlay: {
                    style: string;
                    left: string;
                    top: string;
                    width: string;
                    height: string;
                };
                allowCalculateOverride: boolean;
                encrypted: boolean;
                showCharCount: boolean;
                showWordCount: boolean;
                properties: {};
                allowMultipleMasks: boolean;
                addons: never[];
                mask: boolean;
                inputType: string;
                inputFormat: string;
                inputMask: string;
                displayMask: string;
                spellcheck: boolean;
                truncateMultipleSpaces: boolean;
                rows: number;
                wysiwyg: boolean;
                fixedSize: boolean;
                id: string;
                calculateValueMode?: undefined;
                value?: undefined;
                name?: undefined;
            })[];
            collapsed: boolean;
            hideOnChildrenHidden: boolean;
            placeholder: string;
            prefix: string;
            customClass: string;
            suffix: string;
            multiple: boolean;
            defaultValue: null;
            protected: boolean;
            unique: boolean;
            persistent: boolean;
            hidden: boolean;
            clearOnHide: boolean;
            refreshOn: string;
            redrawOn: string;
            modalEdit: boolean;
            dataGridLabel: boolean;
            labelPosition: string;
            description: string;
            errorLabel: string;
            tooltip: string;
            hideLabel: boolean;
            tabindex: string;
            disabled: boolean;
            autofocus: boolean;
            dbIndex: boolean;
            customDefaultValue: string;
            calculateValue: string;
            calculateServer: boolean;
            widget: null;
            attributes: {};
            validateOn: string;
            validate: {
                required: boolean;
                custom: string;
                customPrivate: boolean;
                strictDateValidation: boolean;
                multiple: boolean;
                unique: boolean;
                onlyAvailableItems?: undefined;
            };
            conditional: {
                show: null;
                when: null;
                eq: string;
            };
            overlay: {
                style: string;
                left: string;
                top: string;
                width: string;
                height: string;
            };
            allowCalculateOverride: boolean;
            encrypted: boolean;
            showCharCount: boolean;
            showWordCount: boolean;
            properties: {};
            allowMultipleMasks: boolean;
            addons: never[];
            tree: boolean;
            lazyLoad: boolean;
            theme: string;
            breadcrumb: string;
            id: string;
            mask?: undefined;
            inputType?: undefined;
            inputFormat?: undefined;
            spellcheck?: undefined;
            data?: undefined;
            idPath?: undefined;
            clearOnRefresh?: undefined;
            limit?: undefined;
            dataSrc?: undefined;
            valueProperty?: undefined;
            filter?: undefined;
            searchEnabled?: undefined;
            searchDebounce?: undefined;
            searchField?: undefined;
            minSearch?: undefined;
            readOnlyValue?: undefined;
            authenticate?: undefined;
            ignoreCache?: undefined;
            template?: undefined;
            selectFields?: undefined;
            selectThreshold?: undefined;
            uniqueOptions?: undefined;
            fuseOptions?: undefined;
            indexeddb?: undefined;
            customOptions?: undefined;
            useExactSearch?: undefined;
        })[];
        hideOnChildrenHidden: boolean;
        placeholder: string;
        prefix: string;
        customClass: string;
        suffix: string;
        multiple: boolean;
        defaultValue: null;
        protected: boolean;
        unique: boolean;
        persistent: boolean;
        hidden: boolean;
        clearOnHide: boolean;
        refreshOn: string;
        redrawOn: string;
        modalEdit: boolean;
        dataGridLabel: boolean;
        labelPosition: string;
        description: string;
        errorLabel: string;
        tooltip: string;
        hideLabel: boolean;
        tabindex: string;
        disabled: boolean;
        autofocus: boolean;
        dbIndex: boolean;
        customDefaultValue: string;
        calculateValue: string;
        calculateServer: boolean;
        widget: null;
        attributes: {};
        validateOn: string;
        validate: {
            required: boolean;
            custom: string;
            customPrivate: boolean;
            strictDateValidation: boolean;
            multiple: boolean;
            unique: boolean;
        };
        conditional: {
            show: null;
            when: null;
            eq: string;
        };
        overlay: {
            style: string;
            left: string;
            top: string;
            width: string;
            height: string;
        };
        allowCalculateOverride: boolean;
        encrypted: boolean;
        showCharCount: boolean;
        showWordCount: boolean;
        properties: {};
        allowMultipleMasks: boolean;
        addons: never[];
        tree: boolean;
        lazyLoad: boolean;
        theme: string;
        breadcrumb: string;
        id: string;
        tag?: undefined;
        attrs?: undefined;
        content?: undefined;
        refreshOnChange?: undefined;
        action?: undefined;
        showValidations?: undefined;
        block?: undefined;
        leftIcon?: undefined;
        custom?: undefined;
        size?: undefined;
        rightIcon?: undefined;
        disableOnInvalid?: undefined;
    })[];
    revisions: string;
    _vid: number;
    title: string;
    display: string;
    access: {
        roles: string[];
        type: string;
    }[];
    submissionAccess: never[];
    controller: string;
    properties: {};
    settings: {};
    name: string;
    path: string;
    project: string;
    created: string;
    modified: string;
    machineName: string;
};
export declare const validationRulesNyHealth: {
    _id: string;
    type: string;
    tags: never[];
    owner: string;
    components: ({
        title: string;
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            attrs: {
                attr: string;
                value: string;
            }[];
            content: string;
            refreshOnChange: boolean;
            key: string;
            type: string;
            input: boolean;
            tableView: boolean;
            mask?: undefined;
            delimiter?: undefined;
            requireDecimal?: undefined;
            inputFormat?: undefined;
            validate?: undefined;
            errorLabel?: undefined;
        } | {
            label: string;
            mask: boolean;
            tableView: boolean;
            delimiter: boolean;
            requireDecimal: boolean;
            inputFormat: string;
            validate: {
                customMessage: string;
                custom: string;
            };
            errorLabel: string;
            key: string;
            type: string;
            input: boolean;
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
        } | {
            label: string;
            mask: boolean;
            tableView: boolean;
            delimiter: boolean;
            requireDecimal: boolean;
            inputFormat: string;
            key: string;
            type: string;
            input: boolean;
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
            validate?: undefined;
            errorLabel?: undefined;
        })[];
        breadcrumbClickable?: undefined;
        buttonSettings?: undefined;
        scrollToTop?: undefined;
        disableOnInvalid?: undefined;
    } | {
        title: string;
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            attrs: {
                attr: string;
                value: string;
            }[];
            content: string;
            refreshOnChange: boolean;
            key: string;
            type: string;
            input: boolean;
            tableView: boolean;
            mask?: undefined;
            delimiter?: undefined;
            requireDecimal?: undefined;
            inputFormat?: undefined;
            calculateValue?: undefined;
            reorder?: undefined;
            addAnotherPosition?: undefined;
            layoutFixed?: undefined;
            enableRowGroups?: undefined;
            initEmpty?: undefined;
            defaultValue?: undefined;
            components?: undefined;
        } | {
            label: string;
            mask: boolean;
            tableView: boolean;
            delimiter: boolean;
            requireDecimal: boolean;
            inputFormat: string;
            calculateValue: string;
            key: string;
            type: string;
            input: boolean;
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
            reorder?: undefined;
            addAnotherPosition?: undefined;
            layoutFixed?: undefined;
            enableRowGroups?: undefined;
            initEmpty?: undefined;
            defaultValue?: undefined;
            components?: undefined;
        } | {
            label: string;
            reorder: boolean;
            addAnotherPosition: string;
            layoutFixed: boolean;
            enableRowGroups: boolean;
            initEmpty: boolean;
            tableView: boolean;
            defaultValue: {
                uniqueName: string;
            }[];
            key: string;
            type: string;
            input: boolean;
            components: {
                label: string;
                tableView: boolean;
                unique: boolean;
                key: string;
                type: string;
                input: boolean;
            }[];
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
            mask?: undefined;
            delimiter?: undefined;
            requireDecimal?: undefined;
            inputFormat?: undefined;
            calculateValue?: undefined;
        })[];
        breadcrumbClickable: boolean;
        buttonSettings: {
            previous: boolean;
            cancel: boolean;
            next: boolean;
        };
        scrollToTop: boolean;
        disableOnInvalid?: undefined;
    } | {
        title: string;
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            attrs: {
                attr: string;
                value: string;
            }[];
            content: string;
            refreshOnChange: boolean;
            key: string;
            type: string;
            input: boolean;
            tableView: boolean;
            title?: undefined;
            collapsible?: undefined;
            components?: undefined;
        } | {
            title: string;
            collapsible: boolean;
            key: string;
            type: string;
            label: string;
            input: boolean;
            tableView: boolean;
            components: {
                label: string;
                mask: boolean;
                tableView: boolean;
                delimiter: boolean;
                requireDecimal: boolean;
                inputFormat: string;
                key: string;
                type: string;
                input: boolean;
            }[];
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
        } | {
            title: string;
            collapsible: boolean;
            key: string;
            type: string;
            label: string;
            input: boolean;
            tableView: boolean;
            components: {
                label: string;
                mask: boolean;
                tableView: boolean;
                delimiter: boolean;
                requireDecimal: boolean;
                inputFormat: string;
                validate: {
                    customMessage: string;
                    custom: string;
                };
                key: string;
                type: string;
                input: boolean;
            }[];
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
        })[];
        breadcrumbClickable?: undefined;
        buttonSettings?: undefined;
        scrollToTop?: undefined;
        disableOnInvalid?: undefined;
    } | {
        title: string;
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            attrs: {
                attr: string;
                value: string;
            }[];
            content: string;
            refreshOnChange: boolean;
            key: string;
            type: string;
            input: boolean;
            tableView: boolean;
            reorder?: undefined;
            addAnotherPosition?: undefined;
            layoutFixed?: undefined;
            enableRowGroups?: undefined;
            initEmpty?: undefined;
            defaultValue?: undefined;
            components?: undefined;
            title?: undefined;
            tooltip?: undefined;
            collapsible?: undefined;
        } | {
            label: string;
            reorder: boolean;
            addAnotherPosition: string;
            layoutFixed: boolean;
            enableRowGroups: boolean;
            initEmpty: boolean;
            tableView: boolean;
            defaultValue: {}[];
            key: string;
            type: string;
            input: boolean;
            components: ({
                label: string;
                mask: boolean;
                tableView: boolean;
                delimiter: boolean;
                requireDecimal: boolean;
                inputFormat: string;
                key: string;
                type: string;
                input: boolean;
                validate?: undefined;
                errorLabel?: undefined;
            } | {
                label: string;
                mask: boolean;
                tableView: boolean;
                delimiter: boolean;
                requireDecimal: boolean;
                inputFormat: string;
                validate: {
                    customMessage: string;
                    custom: string;
                };
                errorLabel: string;
                key: string;
                type: string;
                input: boolean;
            })[];
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
            title?: undefined;
            tooltip?: undefined;
            collapsible?: undefined;
        } | {
            title: string;
            tooltip: string;
            collapsible: boolean;
            key: string;
            type: string;
            label: string;
            input: boolean;
            tableView: boolean;
            components: {
                label: string;
                mask: boolean;
                tableView: boolean;
                delimiter: boolean;
                requireDecimal: boolean;
                inputFormat: string;
                validate: {
                    customMessage: string;
                    custom: string;
                };
                key: string;
                type: string;
                input: boolean;
            }[];
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
            reorder?: undefined;
            addAnotherPosition?: undefined;
            layoutFixed?: undefined;
            enableRowGroups?: undefined;
            initEmpty?: undefined;
            defaultValue?: undefined;
        })[];
        breadcrumbClickable?: undefined;
        buttonSettings?: undefined;
        scrollToTop?: undefined;
        disableOnInvalid?: undefined;
    } | {
        title: string;
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            attrs: {
                attr: string;
                value: string;
            }[];
            content: string;
            refreshOnChange: boolean;
            key: string;
            type: string;
            input: boolean;
            tableView: boolean;
            enableMinDateInput?: undefined;
            datePicker?: undefined;
            enableMaxDateInput?: undefined;
            widget?: undefined;
        } | {
            label: string;
            tableView: boolean;
            enableMinDateInput: boolean;
            datePicker: {
                disableWeekends: boolean;
                disableWeekdays: boolean;
                maxDate: string;
                minDate: string;
            };
            enableMaxDateInput: boolean;
            key: string;
            type: string;
            input: boolean;
            widget: {
                type: string;
                displayInTimezone: string;
                locale: string;
                useLocaleSettings: boolean;
                allowInput: boolean;
                mode: string;
                enableTime: boolean;
                noCalendar: boolean;
                format: string;
                hourIncrement: number;
                minuteIncrement: number;
                time_24hr: boolean;
                minDate: string;
                disableWeekends: boolean;
                disableWeekdays: boolean;
                maxDate: string;
            };
            attrs?: undefined;
            content?: undefined;
            refreshOnChange?: undefined;
        })[];
        breadcrumbClickable?: undefined;
        buttonSettings?: undefined;
        scrollToTop?: undefined;
        disableOnInvalid?: undefined;
    } | {
        type: string;
        label: string;
        key: string;
        disableOnInvalid: boolean;
        input: boolean;
        tableView: boolean;
        title?: undefined;
        collapsible?: undefined;
        components?: undefined;
        breadcrumbClickable?: undefined;
        buttonSettings?: undefined;
        scrollToTop?: undefined;
    })[];
    revisions: string;
    _vid: number;
    title: string;
    display: string;
    access: {
        roles: string[];
        type: string;
    }[];
    submissionAccess: never[];
    controller: string;
    properties: {};
    settings: {};
    name: string;
    path: string;
    project: string;
    created: string;
    modified: string;
    machineName: string;
};
export declare const inlineembed: {
    _id: string;
    type: string;
    tags: never[];
    owner: string;
    components: ({
        html: string;
        label: string;
        refreshOnChange: boolean;
        key: string;
        type: string;
        input: boolean;
        tableView: boolean;
        columns?: undefined;
        hideOnChildrenHidden?: undefined;
    } | {
        label: string;
        columns: ({
            components: {
                title: string;
                collapsible: boolean;
                key: string;
                type: string;
                label: string;
                input: boolean;
                tableView: boolean;
                components: ({
                    label: string;
                    defaultValue: string;
                    key: string;
                    type: string;
                    tableView: boolean;
                    input: boolean;
                    mask: boolean;
                    inputType: string;
                    inputFormat: string;
                    spellcheck: boolean;
                    hideOnChildrenHidden: boolean;
                    validate?: undefined;
                    widget?: undefined;
                    data?: undefined;
                    searchThreshold?: undefined;
                    title?: undefined;
                    collapsible?: undefined;
                    components?: undefined;
                    collapsed?: undefined;
                } | {
                    label: string;
                    tableView: boolean;
                    key: string;
                    type: string;
                    input: boolean;
                    mask: boolean;
                    inputType: string;
                    inputFormat: string;
                    spellcheck: boolean;
                    hideOnChildrenHidden: boolean;
                    defaultValue?: undefined;
                    validate?: undefined;
                    widget?: undefined;
                    data?: undefined;
                    searchThreshold?: undefined;
                    title?: undefined;
                    collapsible?: undefined;
                    components?: undefined;
                    collapsed?: undefined;
                } | {
                    label: string;
                    tableView: boolean;
                    validate: {
                        required: boolean;
                    };
                    key: string;
                    type: string;
                    input: boolean;
                    defaultValue: string;
                    hideOnChildrenHidden: boolean;
                    mask?: undefined;
                    inputType?: undefined;
                    inputFormat?: undefined;
                    spellcheck?: undefined;
                    widget?: undefined;
                    data?: undefined;
                    searchThreshold?: undefined;
                    title?: undefined;
                    collapsible?: undefined;
                    components?: undefined;
                    collapsed?: undefined;
                } | {
                    label: string;
                    widget: string;
                    tableView: boolean;
                    data: {
                        values: {
                            label: string;
                            value: string;
                        }[];
                    };
                    key: string;
                    type: string;
                    input: boolean;
                    searchThreshold: number;
                    hideOnChildrenHidden: boolean;
                    defaultValue?: undefined;
                    mask?: undefined;
                    inputType?: undefined;
                    inputFormat?: undefined;
                    spellcheck?: undefined;
                    validate?: undefined;
                    title?: undefined;
                    collapsible?: undefined;
                    components?: undefined;
                    collapsed?: undefined;
                } | {
                    title: string;
                    collapsible: boolean;
                    key: string;
                    type: string;
                    label: string;
                    input: boolean;
                    tableView: boolean;
                    components: ({
                        label: string;
                        tableView: boolean;
                        key: string;
                        type: string;
                        input: boolean;
                        defaultValue?: undefined;
                        calculateValue?: undefined;
                        editor?: undefined;
                        autoExpand?: undefined;
                        as?: undefined;
                    } | {
                        label: string;
                        tableView: boolean;
                        defaultValue: boolean;
                        calculateValue: string;
                        key: string;
                        type: string;
                        input: boolean;
                        editor?: undefined;
                        autoExpand?: undefined;
                        as?: undefined;
                    } | {
                        label: string;
                        tableView: boolean;
                        key: string;
                        type: string;
                        input: boolean;
                        defaultValue: boolean;
                        calculateValue?: undefined;
                        editor?: undefined;
                        autoExpand?: undefined;
                        as?: undefined;
                    } | {
                        label: string;
                        editor: string;
                        autoExpand: boolean;
                        tableView: boolean;
                        key: string;
                        type: string;
                        as: string;
                        input: boolean;
                        defaultValue?: undefined;
                        calculateValue?: undefined;
                    } | {
                        input: boolean;
                        key: string;
                        tableView: boolean;
                        label: string;
                        type: string;
                        editor: string;
                        as: string;
                        defaultValue?: undefined;
                        calculateValue?: undefined;
                        autoExpand?: undefined;
                    })[];
                    collapsed: boolean;
                    hideOnChildrenHidden: boolean;
                    defaultValue?: undefined;
                    mask?: undefined;
                    inputType?: undefined;
                    inputFormat?: undefined;
                    spellcheck?: undefined;
                    validate?: undefined;
                    widget?: undefined;
                    data?: undefined;
                    searchThreshold?: undefined;
                })[];
                hideOnChildrenHidden: boolean;
            }[];
            width: number;
            offset: number;
            push: number;
            pull: number;
            size: string;
            currentWidth: number;
        } | {
            components: {
                title: string;
                collapsible: boolean;
                key: string;
                type: string;
                label: string;
                input: boolean;
                tableView: boolean;
                components: ({
                    label: string;
                    tag: string;
                    attrs: {
                        attr: string;
                        value: string;
                    }[];
                    content: string;
                    refreshOnChange: boolean;
                    key: string;
                    type: string;
                    input: boolean;
                    tableView: boolean;
                    action?: undefined;
                    showValidations?: undefined;
                    theme?: undefined;
                    block?: undefined;
                    leftIcon?: undefined;
                    custom?: undefined;
                    hideOnChildrenHidden?: undefined;
                } | {
                    label: string;
                    action: string;
                    showValidations: boolean;
                    theme: string;
                    block: boolean;
                    leftIcon: string;
                    tableView: boolean;
                    key: string;
                    type: string;
                    custom: string;
                    input: boolean;
                    hideOnChildrenHidden: boolean;
                    tag?: undefined;
                    attrs?: undefined;
                    content?: undefined;
                    refreshOnChange?: undefined;
                })[];
                hideOnChildrenHidden: boolean;
            }[];
            width: number;
            offset: number;
            push: number;
            pull: number;
            size: string;
            currentWidth: number;
        })[];
        hideOnChildrenHidden: boolean;
        key: string;
        type: string;
        input: boolean;
        tableView: boolean;
        html?: undefined;
        refreshOnChange?: undefined;
    })[];
    revisions: string;
    _vid: number;
    title: string;
    display: string;
    access: {
        roles: string[];
        type: string;
    }[];
    submissionAccess: never[];
    controller: string;
    properties: {};
    settings: {};
    name: string;
    path: string;
    project: string;
    created: string;
    modified: string;
    machineName: string;
};
export declare const customerLoad: {
    _id: string;
    title: string;
    display: string;
    type: string;
    components: ({
        input: boolean;
        tableView: boolean;
        inputType: string;
        label: string;
        key: string;
        validate: {
            required: boolean;
            min: number;
            max: number;
        };
        type: string;
    } | {
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        type: string;
        inputType?: undefined;
        validate?: undefined;
    })[];
    access: {
        roles: string[];
        type: string;
    }[];
    submissionAccess: {
        roles: never[];
        type: string;
    }[];
    settings: {};
    name: string;
    path: string;
    owner: string;
    project: string;
    tags: never[];
    created: string;
    revisions: string;
    _vid: number;
    modified: string;
    machineName: string;
};
export declare const kitchenSink: {
    _id: string;
    type: string;
    tags: never[];
    owner: string;
    components: ({
        label: string;
        title: string;
        collapsible: boolean;
        mask: boolean;
        tableView: boolean;
        alwaysEnabled: boolean;
        type: string;
        input: boolean;
        key: string;
        components: ({
            label: string;
            columns: ({
                components: {
                    label: string;
                    placeholder: string;
                    tableView: boolean;
                    alwaysEnabled: boolean;
                    type: string;
                    input: boolean;
                    key: string;
                    validate: {
                        required: boolean;
                    };
                    widget: {
                        type: string;
                        format: string;
                        dateFormat: string;
                        saveAs: string;
                    };
                    reorder: boolean;
                    hideOnChildrenHidden: boolean;
                    labelWidth: number;
                    labelMargin: number;
                    clearOnRefresh: boolean;
                }[];
                width: number;
                offset: number;
                push: number;
                pull: number;
                type: string;
                input: boolean;
                hideOnChildrenHidden: boolean;
                key: string;
                tableView: boolean;
                label: string;
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                defaultValue: null;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                labelWidth: number;
                labelMargin: number;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                allowCalculateOverride: boolean;
                widget: null;
                refreshOn: string;
                clearOnRefresh: boolean;
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                id: string;
                size: string;
                currentWidth: number;
            } | {
                components: {
                    label: string;
                    placeholder: string;
                    tableView: boolean;
                    alwaysEnabled: boolean;
                    type: string;
                    input: boolean;
                    key: string;
                    widget: {
                        type: string;
                        format: string;
                        dateFormat: string;
                        saveAs: string;
                    };
                    reorder: boolean;
                    hideOnChildrenHidden: boolean;
                    labelWidth: number;
                    labelMargin: number;
                    clearOnRefresh: boolean;
                }[];
                width: number;
                offset: number;
                push: number;
                pull: number;
                type: string;
                input: boolean;
                hideOnChildrenHidden: boolean;
                key: string;
                tableView: boolean;
                label: string;
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                defaultValue: null;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                labelWidth: number;
                labelMargin: number;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                allowCalculateOverride: boolean;
                widget: null;
                refreshOn: string;
                clearOnRefresh: boolean;
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                id: string;
                size: string;
                currentWidth: number;
            } | {
                width: number;
                offset: number;
                push: number;
                pull: number;
                type: string;
                input: boolean;
                hideOnChildrenHidden: boolean;
                key: string;
                tableView: boolean;
                label: string;
                components: {
                    label: string;
                    placeholder: string;
                    description: string;
                    tooltip: string;
                    tableView: boolean;
                    alwaysEnabled: boolean;
                    type: string;
                    input: boolean;
                    key: string;
                    validate: {
                        required: boolean;
                    };
                    widget: {
                        type: string;
                        format: string;
                        dateFormat: string;
                        saveAs: string;
                    };
                    reorder: boolean;
                    hideOnChildrenHidden: boolean;
                    labelWidth: number;
                    labelMargin: number;
                    clearOnRefresh: boolean;
                }[];
                placeholder: string;
                prefix: string;
                customClass: string;
                suffix: string;
                multiple: boolean;
                defaultValue: null;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                dataGridLabel: boolean;
                labelPosition: string;
                labelWidth: number;
                labelMargin: number;
                description: string;
                errorLabel: string;
                tooltip: string;
                hideLabel: boolean;
                tabindex: string;
                disabled: boolean;
                autofocus: boolean;
                dbIndex: boolean;
                customDefaultValue: string;
                calculateValue: string;
                allowCalculateOverride: boolean;
                widget: null;
                refreshOn: string;
                clearOnRefresh: boolean;
                validateOn: string;
                validate: {
                    required: boolean;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: null;
                    when: null;
                    eq: string;
                };
                id: string;
                size: string;
                currentWidth: number;
            })[];
            mask: boolean;
            tableView: boolean;
            alwaysEnabled: boolean;
            type: string;
            input: boolean;
            key: string;
            reorder: boolean;
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
            hideOnChildrenHidden: boolean;
            widget?: undefined;
            inputMasks?: undefined;
            title?: undefined;
            theme?: undefined;
            components?: undefined;
            collapsible?: undefined;
            collapsed?: undefined;
            editor?: undefined;
            wysiwyg?: undefined;
            rows?: undefined;
            defaultValue?: undefined;
            inputFormat?: undefined;
            autoExpand?: undefined;
            isUploadEnabled?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            type: string;
            labelWidth: number;
            labelMargin: number;
            widget: {
                format: string;
                dateFormat: string;
                saveAs: string;
            };
            clearOnRefresh: boolean;
            alwaysEnabled: boolean;
            columns?: undefined;
            mask?: undefined;
            reorder?: undefined;
            hideOnChildrenHidden?: undefined;
            inputMasks?: undefined;
            title?: undefined;
            theme?: undefined;
            components?: undefined;
            collapsible?: undefined;
            collapsed?: undefined;
            editor?: undefined;
            wysiwyg?: undefined;
            rows?: undefined;
            defaultValue?: undefined;
            inputFormat?: undefined;
            autoExpand?: undefined;
            isUploadEnabled?: undefined;
        } | {
            label: string;
            inputMasks: {
                label: string;
                mask: string;
            }[];
            alwaysEnabled: boolean;
            tableView: boolean;
            key: string;
            type: string;
            input: boolean;
            columns?: undefined;
            mask?: undefined;
            reorder?: undefined;
            labelWidth?: undefined;
            labelMargin?: undefined;
            clearOnRefresh?: undefined;
            hideOnChildrenHidden?: undefined;
            widget?: undefined;
            title?: undefined;
            theme?: undefined;
            components?: undefined;
            collapsible?: undefined;
            collapsed?: undefined;
            editor?: undefined;
            wysiwyg?: undefined;
            rows?: undefined;
            defaultValue?: undefined;
            inputFormat?: undefined;
            autoExpand?: undefined;
            isUploadEnabled?: undefined;
        } | {
            key: string;
            input: boolean;
            title: string;
            theme: string;
            tableView: boolean;
            components: ({
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                type: string;
                labelWidth: number;
                labelMargin: number;
                widget: {
                    format: string;
                    dateFormat: string;
                    saveAs: string;
                    type?: undefined;
                    displayInTimezone?: undefined;
                    locale?: undefined;
                    useLocaleSettings?: undefined;
                    allowInput?: undefined;
                    mode?: undefined;
                    enableTime?: undefined;
                    noCalendar?: undefined;
                    hourIncrement?: undefined;
                    minuteIncrement?: undefined;
                    time_24hr?: undefined;
                    minDate?: undefined;
                    maxDate?: undefined;
                };
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                inputType?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                inputType: string;
                label: string;
                key: string;
                protected: boolean;
                type: string;
                labelWidth: number;
                labelMargin: number;
                widget: {
                    format: string;
                    dateFormat: string;
                    saveAs: string;
                    type?: undefined;
                    displayInTimezone?: undefined;
                    locale?: undefined;
                    useLocaleSettings?: undefined;
                    allowInput?: undefined;
                    mode?: undefined;
                    enableTime?: undefined;
                    noCalendar?: undefined;
                    hourIncrement?: undefined;
                    minuteIncrement?: undefined;
                    time_24hr?: undefined;
                    minDate?: undefined;
                    maxDate?: undefined;
                };
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                label: string;
                inputMask: string;
                tableView: boolean;
                alwaysEnabled: boolean;
                type: string;
                input: boolean;
                key: string;
                widget: {
                    type: string;
                    format: string;
                    dateFormat: string;
                    saveAs: string;
                    displayInTimezone?: undefined;
                    locale?: undefined;
                    useLocaleSettings?: undefined;
                    allowInput?: undefined;
                    mode?: undefined;
                    enableTime?: undefined;
                    noCalendar?: undefined;
                    hourIncrement?: undefined;
                    minuteIncrement?: undefined;
                    time_24hr?: undefined;
                    minDate?: undefined;
                    maxDate?: undefined;
                };
                reorder: boolean;
                labelWidth: number;
                labelMargin: number;
                clearOnRefresh: boolean;
                inputType?: undefined;
                protected?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                datePicker: {
                    datepickerMode: string;
                };
                type: string;
                suffix: string;
                widget: {
                    type: string;
                    displayInTimezone: string;
                    locale: string;
                    useLocaleSettings: boolean;
                    allowInput: boolean;
                    mode: string;
                    enableTime: boolean;
                    noCalendar: boolean;
                    format: string;
                    hourIncrement: number;
                    minuteIncrement: number;
                    time_24hr: boolean;
                    minDate: null;
                    maxDate: null;
                    dateFormat?: undefined;
                    saveAs?: undefined;
                };
                defaultValue: null;
                labelWidth: number;
                labelMargin: number;
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                inputType?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                inputType: string;
                label: string;
                key: string;
                suffix: string;
                delimiter: boolean;
                decimalLimit: number;
                requireDecimal: boolean;
                type: string;
                tooltip: string;
                description: string;
                lockKey: boolean;
                labelWidth: number;
                labelMargin: number;
                widget: null;
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                defaultValue?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                inputType: string;
                label: string;
                key: string;
                prefix: string;
                type: string;
                labelWidth: number;
                labelMargin: number;
                widget: null;
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                data: {
                    values: {
                        value: string;
                        label: string;
                    }[];
                };
                valueProperty: string;
                defaultValue: string;
                type: string;
                labelWidth: number;
                labelMargin: number;
                alwaysEnabled: boolean;
                widget?: undefined;
                clearOnRefresh?: undefined;
                inputType?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                data: {
                    values: {
                        value: string;
                        label: string;
                    }[];
                };
                valueProperty: string;
                multiple: boolean;
                type: string;
                labelWidth: number;
                labelMargin: number;
                alwaysEnabled: boolean;
                widget?: undefined;
                clearOnRefresh?: undefined;
                inputType?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                inputFormat?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                type: string;
                inputFormat: string;
                labelWidth?: undefined;
                labelMargin?: undefined;
                widget?: undefined;
                clearOnRefresh?: undefined;
                alwaysEnabled?: undefined;
                inputType?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                values?: undefined;
                optionsLabelPosition?: undefined;
                inline?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                values: {
                    value: string;
                    label: string;
                    shortcut: string;
                }[];
                type: string;
                optionsLabelPosition: string;
                tooltip: string;
                inline: boolean;
                labelWidth: number;
                labelMargin: number;
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                widget?: undefined;
                inputType?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
            } | {
                input: boolean;
                tableView: boolean;
                label: string;
                key: string;
                values: {
                    value: string;
                    label: string;
                    shortcut: string;
                }[];
                type: string;
                optionsLabelPosition: string;
                inputType: string;
                labelWidth: number;
                labelMargin: number;
                clearOnRefresh: boolean;
                alwaysEnabled: boolean;
                widget?: undefined;
                protected?: undefined;
                inputMask?: undefined;
                reorder?: undefined;
                datePicker?: undefined;
                suffix?: undefined;
                defaultValue?: undefined;
                delimiter?: undefined;
                decimalLimit?: undefined;
                requireDecimal?: undefined;
                tooltip?: undefined;
                description?: undefined;
                lockKey?: undefined;
                prefix?: undefined;
                data?: undefined;
                valueProperty?: undefined;
                multiple?: undefined;
                inputFormat?: undefined;
                inline?: undefined;
            })[];
            type: string;
            collapsible: boolean;
            collapsed: boolean;
            label: string;
            columns?: undefined;
            mask?: undefined;
            alwaysEnabled?: undefined;
            reorder?: undefined;
            labelWidth?: undefined;
            labelMargin?: undefined;
            clearOnRefresh?: undefined;
            hideOnChildrenHidden?: undefined;
            widget?: undefined;
            inputMasks?: undefined;
            editor?: undefined;
            wysiwyg?: undefined;
            rows?: undefined;
            defaultValue?: undefined;
            inputFormat?: undefined;
            autoExpand?: undefined;
            isUploadEnabled?: undefined;
        } | {
            label: string;
            editor: string;
            tableView: boolean;
            alwaysEnabled: boolean;
            wysiwyg: {
                theme: string;
                placeholder: string;
                modules: {
                    clipboard: {
                        matchVisual: boolean;
                    };
                    toolbar: ({
                        size: (string | boolean)[];
                    }[] | {
                        header: (number | boolean)[];
                    }[] | {
                        font: never[];
                    }[] | (string | {
                        script: string;
                    })[] | ({
                        color: never[];
                        background?: undefined;
                    } | {
                        background: never[];
                        color?: undefined;
                    })[] | ({
                        list: string;
                        indent?: undefined;
                        align?: undefined;
                    } | {
                        indent: string;
                        list?: undefined;
                        align?: undefined;
                    } | {
                        align: never[];
                        list?: undefined;
                        indent?: undefined;
                    })[])[];
                };
                rows: number;
                base64Upload: boolean;
                image: {
                    toolbar: string[];
                    styles: string[];
                };
                disableNativeSpellChecker: boolean;
                mediaEmbed: {
                    previewsInData: boolean;
                };
            };
            rows: number;
            type: string;
            input: boolean;
            key: string;
            defaultValue: string;
            inputFormat: string;
            autoExpand: boolean;
            isUploadEnabled: boolean;
            reorder: boolean;
            widget: {
                format: string;
                dateFormat: string;
                saveAs: string;
            };
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
            columns?: undefined;
            mask?: undefined;
            hideOnChildrenHidden?: undefined;
            inputMasks?: undefined;
            title?: undefined;
            theme?: undefined;
            components?: undefined;
            collapsible?: undefined;
            collapsed?: undefined;
        })[];
        collapsed: boolean;
        reorder: boolean;
        labelWidth: number;
        labelMargin: number;
        clearOnRefresh: boolean;
        path: string;
        templates?: undefined;
        removeRow?: undefined;
        questions?: undefined;
        values?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        label: string;
        reorder: boolean;
        mask: boolean;
        tableView: boolean;
        alwaysEnabled: boolean;
        type: string;
        input: boolean;
        key: string;
        components: ({
            label: string;
            tableView: boolean;
            alwaysEnabled: boolean;
            type: string;
            input: boolean;
            key: string;
            widget: {
                type: string;
                format: string;
                dateFormat: string;
                saveAs: string;
            };
            reorder: boolean;
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
            hideInputLabels?: undefined;
            inputsLabelPosition?: undefined;
            fields?: undefined;
            useLocaleSettings?: undefined;
            mask?: undefined;
        } | {
            label: string;
            hideInputLabels: boolean;
            inputsLabelPosition: string;
            fields: {
                day: {
                    hide: boolean;
                };
                month: {
                    hide: boolean;
                };
                year: {
                    hide: boolean;
                };
            };
            useLocaleSettings: boolean;
            mask: boolean;
            tableView: boolean;
            alwaysEnabled: boolean;
            type: string;
            input: boolean;
            key: string;
            reorder: boolean;
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
            widget?: undefined;
        })[];
        templates: {
            header: string;
            row: string;
        };
        labelWidth: number;
        labelMargin: number;
        clearOnRefresh: boolean;
        removeRow: string;
        title?: undefined;
        collapsible?: undefined;
        collapsed?: undefined;
        path?: undefined;
        questions?: undefined;
        values?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        label: string;
        alwaysEnabled: boolean;
        tableView: boolean;
        questions: {
            label: string;
            value: string;
        }[];
        values: {
            label: string;
            value: string;
        }[];
        key: string;
        type: string;
        input: boolean;
        title?: undefined;
        collapsible?: undefined;
        mask?: undefined;
        components?: undefined;
        collapsed?: undefined;
        reorder?: undefined;
        labelWidth?: undefined;
        labelMargin?: undefined;
        clearOnRefresh?: undefined;
        path?: undefined;
        templates?: undefined;
        removeRow?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        label: string;
        alwaysEnabled: boolean;
        tableView: boolean;
        key: string;
        type: string;
        input: boolean;
        components: {
            label: string;
            reorder: boolean;
            addAnotherPosition: string;
            defaultOpen: boolean;
            layoutFixed: boolean;
            enableRowGroups: boolean;
            alwaysEnabled: boolean;
            tableView: boolean;
            key: string;
            type: string;
            input: boolean;
            components: {
                label: string;
                widget: {
                    i18n: {
                        lng: string;
                        resources: {
                            en: {
                                translation: {
                                    complete: string;
                                    error: string;
                                    required: string;
                                    pattern: string;
                                    minLength: string;
                                    maxLength: string;
                                    minWords: string;
                                    maxWords: string;
                                    min: string;
                                    max: string;
                                    minSelectedCount: string;
                                    maxSelectedCount: string;
                                    maxDate: string;
                                    minDate: string;
                                    invalid_email: string;
                                    invalid_url: string;
                                    invalid_regex: string;
                                    invalid_date: string;
                                    invalid_day: string;
                                    mask: string;
                                    stripe: string;
                                    month: string;
                                    day: string;
                                    year: string;
                                    january: string;
                                    february: string;
                                    march: string;
                                    april: string;
                                    may: string;
                                    june: string;
                                    july: string;
                                    august: string;
                                    september: string;
                                    october: string;
                                    november: string;
                                    december: string;
                                    next: string;
                                    previous: string;
                                    cancel: string;
                                    submit: string;
                                };
                            };
                        };
                    };
                    language: string;
                    format: string;
                    dateFormat: string;
                    saveAs: string;
                };
                alwaysEnabled: boolean;
                tableView: boolean;
                key: string;
                type: string;
                input: boolean;
                inDataGrid: boolean;
                row: string;
            }[];
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
        }[];
        path: string;
        labelWidth: number;
        labelMargin: number;
        clearOnRefresh: boolean;
        title?: undefined;
        collapsible?: undefined;
        mask?: undefined;
        collapsed?: undefined;
        reorder?: undefined;
        templates?: undefined;
        removeRow?: undefined;
        questions?: undefined;
        values?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        title: string;
        collapsible: boolean;
        alwaysEnabled: boolean;
        tableView: boolean;
        key: string;
        type: string;
        input: boolean;
        label: string;
        components: {
            label: string;
            alwaysEnabled: boolean;
            tableView: boolean;
            key: string;
            type: string;
            input: boolean;
            components: {
                label: string;
                widget: {
                    i18n: {
                        lng: string;
                        resources: {
                            en: {
                                translation: {
                                    complete: string;
                                    error: string;
                                    required: string;
                                    pattern: string;
                                    minLength: string;
                                    maxLength: string;
                                    minWords: string;
                                    maxWords: string;
                                    min: string;
                                    max: string;
                                    minSelectedCount: string;
                                    maxSelectedCount: string;
                                    maxDate: string;
                                    minDate: string;
                                    invalid_email: string;
                                    invalid_url: string;
                                    invalid_regex: string;
                                    invalid_date: string;
                                    invalid_day: string;
                                    mask: string;
                                    stripe: string;
                                    month: string;
                                    day: string;
                                    year: string;
                                    january: string;
                                    february: string;
                                    march: string;
                                    april: string;
                                    may: string;
                                    june: string;
                                    july: string;
                                    august: string;
                                    september: string;
                                    october: string;
                                    november: string;
                                    december: string;
                                    next: string;
                                    previous: string;
                                    cancel: string;
                                    submit: string;
                                };
                            };
                        };
                    };
                    language: string;
                    format: string;
                    dateFormat: string;
                    saveAs: string;
                };
                alwaysEnabled: boolean;
                tableView: boolean;
                key: string;
                type: string;
                input: boolean;
                labelWidth: number;
                labelMargin: number;
                clearOnRefresh: boolean;
            }[];
            path: string;
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
        }[];
        path: string;
        labelWidth: number;
        labelMargin: number;
        clearOnRefresh: boolean;
        mask?: undefined;
        collapsed?: undefined;
        reorder?: undefined;
        templates?: undefined;
        removeRow?: undefined;
        questions?: undefined;
        values?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        label: string;
        components: {
            label: string;
            key: string;
            components: ({
                label: string;
                tableView: boolean;
                alwaysEnabled: boolean;
                type: string;
                input: boolean;
                key: string;
                tab: number;
                widget: {
                    type: string;
                    format: string;
                    dateFormat: string;
                    saveAs: string;
                };
                reorder: boolean;
                labelWidth: number;
                labelMargin: number;
                clearOnRefresh: boolean;
            } | {
                label: string;
                alwaysEnabled: boolean;
                tableView: boolean;
                key: string;
                type: string;
                input: boolean;
                tab?: undefined;
                widget?: undefined;
                reorder?: undefined;
                labelWidth?: undefined;
                labelMargin?: undefined;
                clearOnRefresh?: undefined;
            })[];
        }[];
        mask: boolean;
        tableView: boolean;
        alwaysEnabled: boolean;
        type: string;
        input: boolean;
        key: string;
        reorder: boolean;
        labelWidth: number;
        labelMargin: number;
        clearOnRefresh: boolean;
        path: string;
        title?: undefined;
        collapsible?: undefined;
        collapsed?: undefined;
        templates?: undefined;
        removeRow?: undefined;
        questions?: undefined;
        values?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        clearOnHide: boolean;
        key: string;
        input: boolean;
        tableView: boolean;
        legend: string;
        components: ({
            key: string;
            input: boolean;
            html: string;
            type: string;
            tableView: boolean;
            label: string;
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
            alwaysEnabled: boolean;
            dataGridLabel?: undefined;
            defaultValue?: undefined;
            tooltip?: undefined;
            hideLabel?: undefined;
            widget?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            dataGridLabel: boolean;
            key: string;
            defaultValue: boolean;
            type: string;
            tooltip: string;
            labelWidth: number;
            labelMargin: number;
            clearOnRefresh: boolean;
            alwaysEnabled: boolean;
            html?: undefined;
            hideLabel?: undefined;
            widget?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            type: string;
            hideLabel: boolean;
            labelWidth: number;
            labelMargin: number;
            widget: null;
            clearOnRefresh: boolean;
            alwaysEnabled: boolean;
            html?: undefined;
            dataGridLabel?: undefined;
            defaultValue?: undefined;
            tooltip?: undefined;
        })[];
        type: string;
        hideLabel: boolean;
        label: string;
        labelWidth: number;
        labelMargin: number;
        clearOnRefresh: boolean;
        alwaysEnabled: boolean;
        title?: undefined;
        collapsible?: undefined;
        mask?: undefined;
        collapsed?: undefined;
        reorder?: undefined;
        path?: undefined;
        templates?: undefined;
        removeRow?: undefined;
        questions?: undefined;
        values?: undefined;
        disableOnInvalid?: undefined;
        widget?: undefined;
    } | {
        type: string;
        label: string;
        key: string;
        disableOnInvalid: boolean;
        input: boolean;
        tableView: boolean;
        alwaysEnabled: boolean;
        labelWidth: number;
        labelMargin: number;
        widget: null;
        clearOnRefresh: boolean;
        title?: undefined;
        collapsible?: undefined;
        mask?: undefined;
        components?: undefined;
        collapsed?: undefined;
        reorder?: undefined;
        path?: undefined;
        templates?: undefined;
        removeRow?: undefined;
        questions?: undefined;
        values?: undefined;
        clearOnHide?: undefined;
        legend?: undefined;
        hideLabel?: undefined;
    })[];
    revisions: string;
    _vid: number;
    title: string;
    display: string;
    access: {
        roles: string[];
        type: string;
    }[];
    submissionAccess: {
        roles: string[];
        type: string;
    }[];
    settings: {};
    properties: {};
    name: string;
    path: string;
    project: string;
    created: string;
    modified: string;
    machineName: string;
};
export declare const otherForm: {
    _id: string;
    machineName: string;
    modified: string;
    title: string;
    display: string;
    name: string;
    path: string;
    project: string;
    created: string;
    components: ({
        key: string;
        input: boolean;
        html: string;
        type: string;
        tableView: boolean;
        label: string;
        mask?: undefined;
        spellcheck?: undefined;
        disabled?: undefined;
        delimiter?: undefined;
        requireDecimal?: undefined;
        inputFormat?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        inputType?: undefined;
        values?: undefined;
        data?: undefined;
        lockKey?: undefined;
    } | {
        label: string;
        mask: boolean;
        spellcheck: boolean;
        disabled: boolean;
        tableView: boolean;
        delimiter: boolean;
        requireDecimal: boolean;
        inputFormat: string;
        customDefaultValue: string;
        calculateValue: {
            '+': {
                var: string;
            }[];
            if?: undefined;
        };
        key: string;
        type: string;
        inputType: string;
        input: boolean;
        html?: undefined;
        values?: undefined;
        data?: undefined;
        lockKey?: undefined;
    } | {
        disabled: boolean;
        type: string;
        key: string;
        label: string;
        inputType: string;
        tableView: boolean;
        input: boolean;
        calculateValue: {
            if: (number | {
                '==': (string | {
                    var: string;
                })[];
            })[];
            '+'?: undefined;
        };
        html?: undefined;
        mask?: undefined;
        spellcheck?: undefined;
        delimiter?: undefined;
        requireDecimal?: undefined;
        inputFormat?: undefined;
        customDefaultValue?: undefined;
        values?: undefined;
        data?: undefined;
        lockKey?: undefined;
    } | {
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        values: {
            value: string;
            label: string;
        }[];
        type: string;
        html?: undefined;
        mask?: undefined;
        spellcheck?: undefined;
        disabled?: undefined;
        delimiter?: undefined;
        requireDecimal?: undefined;
        inputFormat?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        inputType?: undefined;
        data?: undefined;
        lockKey?: undefined;
    } | {
        input: boolean;
        tableView: boolean;
        label: string;
        key: string;
        data: {
            values: {
                value: string;
                label: string;
            }[];
        };
        type: string;
        lockKey: boolean;
        html?: undefined;
        mask?: undefined;
        spellcheck?: undefined;
        disabled?: undefined;
        delimiter?: undefined;
        requireDecimal?: undefined;
        inputFormat?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        inputType?: undefined;
        values?: undefined;
    } | {
        input: boolean;
        label: string;
        tableView: boolean;
        key: string;
        type: string;
        html?: undefined;
        mask?: undefined;
        spellcheck?: undefined;
        disabled?: undefined;
        delimiter?: undefined;
        requireDecimal?: undefined;
        inputFormat?: undefined;
        customDefaultValue?: undefined;
        calculateValue?: undefined;
        inputType?: undefined;
        values?: undefined;
        data?: undefined;
        lockKey?: undefined;
    })[];
    owner: string;
    submissionAccess: {
        roles: string[];
        type: string;
    }[];
    access: {
        roles: string[];
        type: string;
    }[];
    tags: never[];
    type: string;
    revisions: string;
    _vid: number;
    settings: {};
};
export declare const simpleNestedForm: {
    display: string;
    components: ({
        collapsible: boolean;
        key: string;
        type: string;
        label: string;
        input: boolean;
        tableView: boolean;
        components: ({
            label: string;
            reorder: boolean;
            addAnotherPosition: string;
            layoutFixed: boolean;
            enableRowGroups: boolean;
            initEmpty: boolean;
            tableView: boolean;
            defaultValue: {}[];
            key: string;
            type: string;
            input: boolean;
            components: ({
                label: string;
                applyMaskOn: string;
                tableView: boolean;
                validate: {
                    required: boolean;
                    maxLength?: undefined;
                    pattern?: undefined;
                };
                key: string;
                type: string;
                input: boolean;
            } | {
                label: string;
                applyMaskOn: string;
                tableView: boolean;
                validate: {
                    maxLength: number;
                    required?: undefined;
                    pattern?: undefined;
                };
                key: string;
                type: string;
                input: boolean;
            } | {
                label: string;
                applyMaskOn: string;
                tableView: boolean;
                validate: {
                    pattern: string;
                    required?: undefined;
                    maxLength?: undefined;
                };
                key: string;
                type: string;
                input: boolean;
            })[];
            applyMaskOn?: undefined;
            validate?: undefined;
        } | {
            label: string;
            applyMaskOn: string;
            tableView: boolean;
            validate: {
                pattern: string;
                minLength: number;
            };
            key: string;
            type: string;
            input: boolean;
            reorder?: undefined;
            addAnotherPosition?: undefined;
            layoutFixed?: undefined;
            enableRowGroups?: undefined;
            initEmpty?: undefined;
            defaultValue?: undefined;
            components?: undefined;
        })[];
        disableOnInvalid?: undefined;
    } | {
        type: string;
        label: string;
        key: string;
        disableOnInvalid: boolean;
        input: boolean;
        tableView: boolean;
        collapsible?: undefined;
        components?: undefined;
    })[];
};
